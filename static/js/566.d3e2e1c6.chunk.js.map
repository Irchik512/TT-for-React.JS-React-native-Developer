{"version":3,"file":"static/js/566.d3e2e1c6.chunk.js","mappings":"gOAEaA,EAAUC,EAAAA,GAAAA,QAAH,oEAIPC,EAAYD,EAAAA,GAAAA,IAAH,8GAOTE,EAAQF,EAAAA,GAAAA,GAAH,4C,SCXH,SAASG,EAAT,GAAwC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxC,OACE,SAACN,EAAD,WACE,UAACE,EAAD,WACGG,IAAS,SAACF,EAAD,UAAQE,IACjBC,MAIR,C,yFCPc,SAASC,IAEtB,OACE,yBACA,mBAaH,CCZc,SAASC,IAUtB,OACE,+BACE,UAACR,EAAA,EAAD,YACE,wCAGE,0DAEA,+BACE,SAACO,EAAD,UAOX,C","sources":["components/Section/Section.styled.jsx","components/Section/Section.jsx","components/List/List.jsx","views/Dictionary/DictionaryView.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Section = styled.section`\n  width: 100%;\n  font-family: sans-serif;\n`;\nexport const Container = styled.div`\n  box-sizing: border-box;\n  padding: 0 20px;\n  width: 100%;\n  text-align: center;\n`;\n\nexport const Title = styled.h2`\n  font-size: 35px;\n`;\n","import { Section, Title, Container } from 'components/Section/Section.styled';\n\nexport default function Sections({ title, children }) {\n  return (\n    <Section>\n      <Container>\n        {title && <Title>{title}</Title>}\n        {children}\n      </Container>\n    </Section>\n  );\n}\n","// import ListItem from 'components/ListItems/DictionaryItem';\n// import { useSelector } from 'react-redux';\n// import { selectFilteredContacts } from 'redux/contacts';\n\nexport default function List() {\n  // const dictionaryList = useSelector(selectFilteredContacts);\n  return (\n    <ul>\n    <li>\n      \n    </li>\n      {/* {dictionaryList.map(word => (\n        <ListItem\n          key={word.id}\n          name={word.word}\n          number={word.translate}\n          id={word.id}\n        />\n      ))} */}\n    </ul>\n  );\n}\n","import Section from 'components/Section/Section';\nimport List from 'components/List/List';\n// import Notification from 'components/Notification/Notification';\n// import { toast } from 'react-toastify';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { selectContactsValue ,selectIsLoading, selectError } from 'redux/contacts/selectors';\n// import {getAllContacts} from 'redux/contacts/operations'\n// import { useEffect } from 'react';\n\nexport default function DictionaryView() {\n  // const contactsList = useSelector(selectContactsValue);\n  // const dispatch = useDispatch();\n  // const isLoading = useSelector(selectIsLoading);\n  // const error = useSelector(selectError);\n  \n  // useEffect(() => {\n  //   dispatch(getAllContacts());\n  // }, [dispatch]);\n\n  return (\n    <>\n      <Section>\n        <h2>Dictionary</h2>   \n        {/* {isLoading && !error && <p>Request in progress...</p>}\n        {wordsList.length < 1 ? ( */}\n          <p>There is no word to lern yet.</p>\n        {/* ) : ( */}\n          <>\n            <List />\n          </>\n        {/* )} */}\n        {/* {error !== null && <Notification>{toast.error(error)}</Notification>}    */}\n      </Section>\n    </>\n  );\n}\n"],"names":["Section","styled","Container","Title","Sections","title","children","List","DictionaryView"],"sourceRoot":""}